import { useState, useEffect } from "react"
import { createClient } from "@/lib/supabase/client"

interface StudyRecommendation {
	id: string
	title: string
	description: string
	priority: "high" | "medium" | "low"
	category: string
	estimatedTime: number
	reason: string
	icon: string
}

export default function StudyRecommendations() {
	const [recommendations, setRecommendations] = useState<StudyRecommendation[]>(
		[]
	)
	const [loading, setLoading] = useState(true)

	useEffect(() => {
		loadRecommendations()
	}, [])

	async function loadRecommendations() {
		try {
			const supabase = createClient()
			const {
				data: { user },
			} = await supabase.auth.getUser()
			if (!user) return

			// Mock recommendations based on user performance
			// In production, these would be generated by analyzing user data
			const mockRecommendations: StudyRecommendation[] = [
				{
					id: "weak-category-focus",
					title: "Focus on Regulatory Concepts",
					description:
						"Your accuracy in regulatory topics is below 70%. Spend time reviewing key concepts.",
					priority: "high",
					category: "Regulatory",
					estimatedTime: 30,
					reason: "Low accuracy in regulatory questions",
					icon: "📚",
				},
				{
					id: "spaced-repetition",
					title: "Review Recent Questions",
					description:
						"Questions from your last session are due for review based on spaced repetition.",
					priority: "high",
					category: "Spaced Repetition",
					estimatedTime: 20,
					reason: "Optimal review timing",
					icon: "🔄",
				},
				{
					id: "vocab-review",
					title: "Refresh Key Terms",
					description:
						"Review vocabulary terms for investment fundamentals to strengthen your foundation.",
					priority: "medium",
					category: "Vocabulary",
					estimatedTime: 15,
					reason: "Foundation building",
					icon: "📖",
				},
				{
					id: "mixed-difficulty",
					title: "Mixed Difficulty Practice",
					description:
						"Try a session with mixed difficulty levels to challenge yourself.",
					priority: "medium",
					category: "Practice",
					estimatedTime: 25,
					reason: "Skill development",
					icon: "⚖️",
				},
				{
					id: "goal-progress",
					title: "Work Toward Weekly Goal",
					description:
						"You're 65% toward your weekly goal. A focused session will help you reach it.",
					priority: "medium",
					category: "Goal Achievement",
					estimatedTime: 20,
					reason: "Goal progress",
					icon: "🎯",
				},
			]

			setRecommendations(mockRecommendations)
			setLoading(false)
		} catch (error) {
			console.error("Error loading recommendations:", error)
			setLoading(false)
		}
	}

	function getPriorityColor(priority: string): string {
		switch (priority) {
			case "high":
				return "border-[#DC2626] bg-[#FEE2E2] text-[#DC2626]"
			case "medium":
				return "border-[#D97706] bg-[#FEF3C7] text-[#D97706]"
			case "low":
				return "border-[#0094C6] bg-[#DBEAFE] text-[#0094C6]"
			default:
				return "border-[#E8F4F8] bg-[#F8FBFC] text-[#005E7C]"
		}
	}

	function getPriorityIcon(priority: string): string {
		switch (priority) {
			case "high":
				return "🔴"
			case "medium":
				return "🟡"
			case "low":
				return "🟢"
			default:
				return "⚪"
		}
	}

	if (loading) {
		return (
			<div className="flex items-center justify-center p-8">
				<div className="animate-spin rounded-full h-8 w-8 border-b-2 border-[#0094C6]"></div>
			</div>
		)
	}

	return (
		<div className="space-y-6">
			{/* Header */}
			<div className="flex justify-between items-center">
				<h2 className="text-2xl font-bold text-[#000022]">
					🎯 Personalized Recommendations
				</h2>
			</div>

			{/* Priority Summary */}
			<div className="bg-white rounded-lg shadow-sm border border-[#E8F4F8] p-6">
				<h3 className="text-lg font-semibold text-[#000022] mb-4">
					📊 Priority Overview
				</h3>
				<div className="grid md:grid-cols-3 gap-4">
					<div className="text-center p-4 bg-[#FEE2E2] rounded-lg">
						<div className="text-2xl mb-2">🔴</div>
						<div className="text-lg font-bold text-[#DC2626]">
							{recommendations.filter((r) => r.priority === "high").length}
						</div>
						<div className="text-sm text-[#DC2626]">High Priority</div>
					</div>
					<div className="text-center p-4 bg-[#FEF3C7] rounded-lg">
						<div className="text-2xl mb-2">🟡</div>
						<div className="text-lg font-bold text-[#D97706]">
							{recommendations.filter((r) => r.priority === "medium").length}
						</div>
						<div className="text-sm text-[#D97706]">Medium Priority</div>
					</div>
					<div className="text-center p-4 bg-[#DBEAFE] rounded-lg">
						<div className="text-2xl mb-2">🟢</div>
						<div className="text-lg font-bold text-[#0094C6]">
							{recommendations.filter((r) => r.priority === "low").length}
						</div>
						<div className="text-sm text-[#0094C6]">Low Priority</div>
					</div>
				</div>
			</div>

			{/* Recommendations List */}
			<div className="bg-white rounded-lg shadow-sm border border-[#E8F4F8] p-6">
				<h3 className="text-lg font-semibold text-[#000022] mb-4">
					💡 Study Suggestions
				</h3>
				<div className="space-y-4">
					{recommendations.map((recommendation) => (
						<div
							key={recommendation.id}
							className="border border-[#E8F4F8] rounded-lg p-4 hover:shadow-md transition-shadow"
						>
							<div className="flex items-start justify-between">
								<div className="flex items-start space-x-3 flex-1">
									<div className="text-2xl">{recommendation.icon}</div>
									<div className="flex-1">
										<div className="flex items-center space-x-2 mb-2">
											<h4 className="font-semibold text-[#000022]">
												{recommendation.title}
											</h4>
											<span
												className={`px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(
													recommendation.priority
												)}`}
											>
												{getPriorityIcon(recommendation.priority)}{" "}
												{recommendation.priority.toUpperCase()}
											</span>
										</div>
										<p className="text-[#005E7C] mb-2">
											{recommendation.description}
										</p>
										<div className="flex items-center space-x-4 text-sm text-[#005E7C]">
											<span>📁 {recommendation.category}</span>
											<span>⏱️ {recommendation.estimatedTime} min</span>
											<span>💡 {recommendation.reason}</span>
										</div>
									</div>
								</div>
								<div className="ml-4">
									<button className="bg-[#0094C6] text-white px-4 py-2 rounded-lg hover:bg-[#001242] transition-colors">
										Start
									</button>
								</div>
							</div>
						</div>
					))}
				</div>
			</div>

			{/* Quick Actions */}
			<div className="bg-white rounded-lg shadow-sm border border-[#E8F4F8] p-6">
				<h3 className="text-lg font-semibold text-[#000022] mb-4">
					⚡ Quick Actions
				</h3>
				<div className="grid md:grid-cols-2 gap-4">
					<button className="p-4 bg-[#16A34A] text-white rounded-lg hover:bg-[#15803D] transition-colors text-center">
						<div className="text-2xl mb-2">🎯</div>
						<div className="font-semibold">Start High Priority</div>
						<div className="text-sm opacity-90">
							Begin with most important recommendations
						</div>
					</button>
					<button className="p-4 bg-[#0094C6] text-white rounded-lg hover:bg-[#001242] transition-colors text-center">
						<div className="text-2xl mb-2">🔄</div>
						<div className="font-semibold">Refresh Recommendations</div>
						<div className="text-sm opacity-90">Get updated suggestions</div>
					</button>
				</div>
			</div>

			{/* Study Insights */}
			<div className="bg-[#E8F4F8] rounded-lg p-6">
				<h3 className="text-lg font-semibold text-[#000022] mb-4">
					🧠 Study Insights
				</h3>
				<div className="grid md:grid-cols-2 gap-4 text-sm">
					<div>
						<h4 className="font-medium text-[#001242] mb-2">
							📈 Performance Trends
						</h4>
						<p className="text-[#005E7C]">
							Your accuracy has improved 15% over the last week. Focus on
							maintaining this momentum.
						</p>
					</div>
					<div>
						<h4 className="font-medium text-[#001242] mb-2">
							🎯 Optimal Study Time
						</h4>
						<p className="text-[#005E7C]">
							Your best performance is between 9-11 AM. Schedule important
							sessions during this window.
						</p>
					</div>
					<div>
						<h4 className="font-medium text-[#001242] mb-2">
							📚 Learning Style
						</h4>
						<p className="text-[#005E7C]">
							You learn best with concept review followed by practice questions.
						</p>
					</div>
					<div>
						<h4 className="font-medium text-[#001242] mb-2">
							⚡ Session Length
						</h4>
						<p className="text-[#005E7C]">
							Your optimal session length is 25-30 minutes. Longer sessions show
							diminishing returns.
						</p>
					</div>
				</div>
			</div>
		</div>
	)
}
